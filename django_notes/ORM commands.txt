

                    * filter student by indexing 

Student.objects.all()[0:4]
Student.objects.all()[5:7]





                    * filter student age 

Student.objects.filter(age__gt=25) # This shows the students greater then 25
Student.objects.filter(age__gte=25) # This shows the students greater or equals to 25
Student.objects.filter(age__lt=25) # This shows the students less then 18
Student.objects.filter(age__gte=25) # This shows the students less then or equals to 18
Student.objects.filter(age__in=[21, 20, 45, 32]) # This shows the student that's age of 21, 20, 45, 32 (this is used to get the data in bulk and can be use in other fileds like name , address ...)






                    * filter student by the letter contains in their name
        
Student.objects.filter(name__contains"n") # This shows the students whose name have letter "n" at anywhere but it's case sensetive means it only shows the name where samll n is used
Student.objects.filter(name__icontains"n") # This is same as above but that after including "i" infront of contains this became case insensitive. No matter captital or small n this shows every (n, N) in the name 






                    * filter student by their first letter of the name 

Student.objects.filter(name__startswith"M") # This shows the students whose name starts with letter "M"



                    * filter student by their last letter of the name 

Student.objects.filter(name__endswith"ta") # This shows the students whose name ends with letter "ta"




                                * filter students by excluding *
                                
Student.objects.exclude(age=45) # This shows all the students except age 45 it exclude the students who have age 45 and this can be done in other fileds too like name...




* Count the student *


Student.objects.all().count() # This count all the students
Student.objects.filter(name__startswith="j").count() # This counts the students whose name starts with j



* get student by order *
Student.objects.all().order_by('id') # This shows the students by the order of id in ascending order
Student.objects.all().order_by('-id') # This shows the students by the order of id in decending order




* update *
Student.objects.filter(id__in=[1, 2]).update(classroom=None) # This will update the classroom of student id 1 and 2 to Null



* find students
Student.objects.filter(classroom__isnull=True) # This will show the students whose classroom is null
Student.objects.filter(classroom__isnull=false) # This will show the students whose classroom has classroom name. 


* find stuents with or & and 
Student.objects.filter(Q(name="Jane")| Q (age=21)) # This shows all the students name of Jane and laso shows the students of age 21.
Student.objects.filter(name="Jane", age=45) # This shows the student name of john and his age must be 45 


 
                            ************************ CROSS TABLE ORM *****************************(RELATED NAME)

sp = StudentProfile.objects.get(id=1)  # sp vaneko StudentProfile ko id 1 vako student ko object ho aba hamile yes bata data haru line kam garxau 
sp.student.email() # This will show the email of StudentProfile(studentprofile object 1) id 1 ko student ko // tyo sp.student rakhnu ko karan sp vaneko studentprofile vayi ani email field chai student model ma vayera uts bata lina ko lagi tyo gareko
s = Student.objects.get(id=1)  # s vaneko ko id 1 vako student ko object ho aba hamile yes bata data haru line kam garxau 
s.studentprofile.roll_no   # This will show the roll no of student id 1 tyo bich ko studentprofile lekheko karan rollno studentprofile ma xa TYO RELATED NAME HO 

Student.objects.filter(studentprofile__roll_no=2) # filter garda related name rakhna ni milxa 
Student.objects.filter(studentprofile__contact=989877655) 


ClassRoom.objects.filter(classroom_students__age=21) # This will show the student age of 25 in any of classroom

